{{- if .Values.images.backend.replicaCount }}
apiVersion: apps/v1
kind: Deployment
metadata:
    name: "{{ template "fullname" . }}-backend"
    labels:
        app: {{ template "name" . }}
        chart: {{ template "chart" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        component: "backend"
spec:
    replicas: {{ .Values.images.backend.replicaCount }}
    selector:
        matchLabels:
            app: {{ template "name" . }}
            release: {{ .Release.Name }}
            component: "backend"
    template:
        metadata:
            labels:
                app: {{ template "name" . }}
                release: {{ .Release.Name }}
                component: "backend"
        spec:
            containers:
                -   name: "{{ .Chart.Name }}-backend"
                    image: "{{ .Values.images.backend.repository }}:{{ .Values.images.backend.tag }}"
                    imagePullPolicy: "{{ .Values.pullPolicy }}"
                    ports:
                        -   containerPort: {{ .Values.images.backend.servicePort }}
                            name: http
                      {{- if or .Values.images.backend.debug .Values.images.backend.debugsuspend }}
                        -   containerPort: 5005
                            name: "jvm-debug"
                      {{- end }}
                    env:
                        -   name: JAVA_OPTS
                            value: "{{ .Values.images.backend.javaOpts }}{{ if .Values.images.backend.debug }} -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005{{ end }}{{ if .Values.images.backend.debugsuspend }} -agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005{{ end }}"
                        -   name: HAZELCAST_KUBERNETES_SERVICE
                            value: "{{ template "fullname" . }}-backend"
                        -   name: HAZELCAST_KUBERNETES_NAMESPACE
                            value: "{{ .Release.Namespace }}"
                        -   name: ICURE_COUCHDB_URL
                            value: "http://{{ .Values.couchdbServiceName }}:{{ .Values.couchdbPortNumber }}"
                      {{- range $key, $value := .Values.images.backend.env }}
                        -   name: "{{ $key }}"
                            value: "{{ $value }}"
                      {{- end }}
                    resources:
                        requests:
                            memory: {{ .Values.images.backend.memoryRequest | quote }}
                          {{- if .Values.images.backend.cpuRequest }}
                            cpu: {{ .Values.images.backend.cpuRequest | quote }}
                          {{- end }}
                        limits:
                            memory: {{ .Values.images.backend.memoryLimit | quote }}
                          {{- if .Values.images.backend.cpuLimit }}
                            cpu: {{ .Values.images.backend.cpuLimit | quote }}
                          {{- end }}
            initContainers:
                -   name: init-couchdb
                    image: busybox
                    command: ['sh', '-c', 'until wget http://{{ .Values.couchdbServiceName }}:{{ .Values.couchdbPortNumber }}; do echo waiting for couchdb; sleep 2; done;']
            imagePullSecrets:
                -   name: regsecret
  {{- end }}